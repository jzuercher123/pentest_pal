import security_check_claude
import security_check_openai

class PenPal:
    def __init__(self, service='anthropic'):
        self.service = service


        else:
            raise ValueError("Invalid service")

    def analyze_code(self, code_snippet):
        if self.service == 'anthropic':
            return security_check_claude.analyze_code(code_snippet)
        elif self.service == 'openai':
            return security_check_openai.analyze_code(code_snippet)
        else:
            raise ValueError("Invalid service")

    def generate_test_inputs(self, vulnerability_type):
        if self.service == 'anthropic':
            return security_check_claude.generate_test_inputs(vulnerability_type)
        elif self.service == 'openai':
            return security_check_openai.generate_test_inputs(vulnerability_type)
        else:
            raise ValueError("Invalid service")

    def generate_report(self, findings):
        if self.service == 'anthropic':
            return security_check_claude.generate_report(findings)
        elif self.service == 'openai':
            return security_check_openai.generate_report(findings)
        else:
            raise ValueError("Invalid service")


